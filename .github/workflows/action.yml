name: Automatic Tile Generation and Release - German States

permissions:
  contents: write

on:
  workflow_dispatch:
  
jobs:
  generate_tiles:
    runs-on: self-hosted
    container:
        image: ghcr.io/gis-ops/docker-valhalla/valhalla:latest
        options: --privileged --cgroupns host --user root
    strategy:
      matrix:
        state:
          - { name: "baden-wuerttemberg", url: "https://download.geofabrik.de/europe/germany/baden-wuerttemberg-latest.osm.pbf" }
          - { name: "bayern", url: "https://download.geofabrik.de/europe/germany/bayern-latest.osm.pbf" }
          - { name: "berlin", url: "https://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf" }
          - { name: "brandenburg", url: "https://download.geofabrik.de/europe/germany/brandenburg-latest.osm.pbf" }
          - { name: "bremen", url: "https://download.geofabrik.de/europe/germany/bremen-latest.osm.pbf" }
          - { name: "hamburg", url: "https://download.geofabrik.de/europe/germany/hamburg-latest.osm.pbf" }
          - { name: "hessen", url: "https://download.geofabrik.de/europe/germany/hessen-latest.osm.pbf" }
          - { name: "mecklenburg-vorpommern", url: "https://download.geofabrik.de/europe/germany/mecklenburg-vorpommern-latest.osm.pbf" }
          - { name: "niedersachsen", url: "https://download.geofabrik.de/europe/germany/niedersachsen-latest.osm.pbf" }
          - { name: "nordrhein-westfalen", url: "https://download.geofabrik.de/europe/germany/nordrhein-westfalen-latest.osm.pbf" }
          - { name: "rheinland-pfalz", url: "https://download.geofabrik.de/europe/germany/rheinland-pfalz-latest.osm.pbf" }
          - { name: "saarland", url: "https://download.geofabrik.de/europe/germany/saarland-latest.osm.pbf" }
          - { name: "sachsen", url: "https://download.geofabrik.de/europe/germany/sachsen-latest.osm.pbf" }
          - { name: "sachsen-anhalt", url: "https://download.geofabrik.de/europe/germany/sachsen-anhalt-latest.osm.pbf" }
          - { name: "schleswig-holstein", url: "https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf" }
          - { name: "thueringen", url: "https://download.geofabrik.de/europe/germany/thueringen-latest.osm.pbf" }
    steps:
    
    - name: Download Dependencies
      run: sudo apt install wget -y
    
    - name: Download OSM PBF for ${{ matrix.state.name }}
      run: |
        echo "Downloading ${{ matrix.state.name }} PBF file..."
        sudo wget -q ${{ matrix.state.url }}
        echo "Download completed for ${{ matrix.state.name }}"
        ls -la *.osm.pbf
      
    - name: Mjolnir Build for ${{ matrix.state.name }}
      run: |
        echo "Building Valhalla configuration for ${{ matrix.state.name }}..."
        sudo valhalla_build_config | sudo tee valhalla.json
        
        echo "Building tiles for ${{ matrix.state.name }}..."
        sudo valhalla_build_tiles -c valhalla.json ${{ matrix.state.name }}-latest.osm.pbf
        
        echo "Building extract for ${{ matrix.state.name }}..."
        sudo valhalla_build_extract -c valhalla.json
        
        echo "Creating tarball for ${{ matrix.state.name }}..."
        sudo mv /data/valhalla/tiles.tar /data/valhalla/valhalla_tiles_${{ matrix.state.name }}.tar
        
        echo "Tile generation completed for ${{ matrix.state.name }}"
        ls -la /data/valhalla/
        
    - name: Copy and Fix Permissions for ${{ matrix.state.name }}
      run: |
        # Create temp directory in workspace (accessible by runner)
        mkdir -p /tmp/artifacts
        
        # Copy file to accessible location
        sudo cp /data/valhalla/valhalla_tiles_${{ matrix.state.name }}.tar /tmp/artifacts/
        
        # Fix ownership and permissions (666 for maximum compatibility)
        sudo chown $(whoami):$(whoami) /tmp/artifacts/valhalla_tiles_${{ matrix.state.name }}.tar
        sudo chmod 666 /tmp/artifacts/valhalla_tiles_${{ matrix.state.name }}.tar
        
        echo "File copied and permissions fixed:"
        ls -la /tmp/artifacts/
        
    - name: Upload Build Artifact for ${{ matrix.state.name }}
      uses: actions/upload-artifact@v4
      with:
        name: valhalla_tiles_${{ matrix.state.name }}
        path: /tmp/artifacts/valhalla_tiles_${{ matrix.state.name }}.tar
        
  release:
    needs: generate_tiles
    runs-on: ubuntu-latest
    steps:
      - name: Download All Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: List All Artifacts
        run: |
          echo "Listing all downloaded artifacts:"
          find artifacts -name "*.tar" -type f
          
      - name: Create Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: latest
          title: "Valhalla Tiles - German States (Individual Packages)"
          files: |
            artifacts/**/*
